function DataSeed() {
  const question = new Map<number, string[]>()
  question.set(1, ["BOD", "Delivery", "Finance", "HR"])
  question.set(2, ["Leader", "Member"])
  question.set(3, ["1–2 cuộc", "3–4 cuộc", "Gần như mỗi ngày", "Không cố định"])
  question.set(4, ["< 30 phút", "30–60 phút", "> 90 phút"])
  question.set(5, ["Rất tốt – luôn đạt mục tiêu", "Khá – thường đạt nhưng còn điểm chưa hài lòng", "Trung bình – có lúc đạt, có lúc không", "Chưa tốt – thường thiếu rõ ràng, ít kết quả cuối"])
  question.set(6, ["Họp quá dài, mất tập trung", "Nội dung chưa đi thẳng vào trọng tâm", "Không có chuẩn bị trước (agenda, tài liệu)", "Thiếu kỹ năng dẫn dắt, đặt câu hỏi, tổng hợp ý kiến", "Kết thúc họp không chốt rõ: việc gì, ai làm, deadline nào", "Tham gia họp bị động, ít người đóng góp ý kiến"])
  question.set(7, ["Quản lý và tối ưu thời gian họp", "Tập trung vào trọng tâm và hiệu quả", "Cải thiện chất lượng trao đổi và sự tham gia", "Chuẩn bị và tổ chức chuyên nghiệp"])
  question.set(8, ["Kỹ năng chuẩn bị agenda & tài liệu trước họp", "Kỹ năng điều phối & dẫn dắt họp (facilitation)", "Cách tham gia họp hiệu quả (đặt câu hỏi, đóng góp ý kiến)", "Ghi nhận & tổng hợp kết quả họp", "Rút ngắn thời gian họp mà vẫn đạt hiệu quả", "Thực hành tình huống thực tế"])
  question.set(9, ["Chuẩn bị tốt hơn và tham gia họp hiệu quả hơn", "Giảm thời gian họp nhưng vẫn hiệu quả", "Tự tin điều phối/đóng góp trong cuộc họp", "Hiểu được mục đích cuộc họp và biết next action của bản thân"])
  question.set(10, ["Tối ưu và quản lý thời gian họp", "Tập trung vào trọng tâm, đúng người – đúng việc", "Chuẩn bị kỹ trước khi họp", "Nâng cao vai trò điều phối và truyền tải", "Tổng hợp tinh gọn"])
  question.set(11, ["Nhiều case thực tế trong công ty", "Tài liệu tham khảo sau workshop", "Thực hành tình huống"])
  question.set(12, ["Không có thêm ý kiến", "Cần cải thiện kỹ năng quản lý thời gian trong các cuộc họp", "Một số cuộc họp ngoài phạm vi dự án", "Số lượng cuộc họp hiện tại hơi nhiều và kéo dài", "Một số thành viên tham dự nhưng chưa đóng góp thiết thực"])

  const answer: Map<number, boolean[]>[] = []

  answer[0] = new Map<number, boolean[]>()
  answer[0].set(1, [false, true, false, false])
  answer[0].set(2, [false, true])
  answer[0].set(3, [false, true, false, false])
  answer[0].set(4, [false, true, false])
  answer[0].set(5, [false, false, true, false])
  answer[0].set(6, [true, true, false, true, false, true])
  answer[0].set(7, [true, true, false, false])
  answer[0].set(8, [false, true, true, false, true, false])
  answer[0].set(9, [false, true, false, true])
  answer[0].set(10, [false, true, false, false, false])
  answer[0].set(11, [true, false, false])
  answer[0].set(12, [true, false, false, false, false])

  answer[1] = new Map<number, boolean[]>()
  answer[1].set(1, [false, true, false, false])
  answer[1].set(2, [false, true])
  answer[1].set(3, [true, false, false, false])
  answer[1].set(4, [false, true, false])
  answer[1].set(5, [false, true, false, false])
  answer[1].set(6, [true, true, false, true, false, true])
  answer[1].set(7, [false, false, true, false])
  answer[0].set(8, [false, true, true, false, true, false])
  answer[1].set(9, [true, false, true, false])
  answer[1].set(10, [false, false, true, true, false])
  answer[1].set(11, [false, true, false])
  answer[1].set(12, [true, false, false, false, false])

  answer[2] = new Map<number, boolean[]>()
  answer[2].set(1, [false, false, false, false])
  answer[2].set(2, [false, false])
  answer[2].set(3, [false, false, false, false])
  answer[2].set(4, [false, false, false])
  answer[2].set(5, [false, false, false, false])
  answer[2].set(6, [false, false, false, false, false, false])
  answer[2].set(7, [false, false, false, false])
  answer[2].set(8, [false, false, false, false, false, false])
  answer[2].set(9, [false, false, false, false])
  answer[2].set(10, [false, false, false, false, false])
  answer[2].set(11, [false, false, false])
  answer[2].set(12, [false, false, false, false, false])

  answer[3] = new Map<number, boolean[]>()
  answer[3].set(1, [false, false, false, false])
  answer[3].set(2, [false, false])
  answer[3].set(3, [false, false, false, false])
  answer[3].set(4, [false, false, false])
  answer[3].set(5, [false, false, false, false])
  answer[3].set(6, [false, false, false, false, false, false])
  answer[3].set(7, [false, false, false, false])
  answer[3].set(8, [false, false, false, false, false, false])
  answer[3].set(9, [false, false, false, false])
  answer[3].set(11, [false, false, false, false, false])
  answer[3].set(11, [false, false, false])
  answer[3].set(12, [false, false, false, false, false])

  answer[4] = new Map<number, boolean[]>()
  answer[4].set(1, [false, false, false, false])
  answer[4].set(2, [false, false])
  answer[4].set(3, [false, false, false, false])
  answer[4].set(4, [false, false, false])
  answer[4].set(5, [false, false, false, false])
  answer[4].set(6, [false, false, false, false, false, false])
  answer[4].set(7, [false, false, false, false])
  answer[4].set(8, [false, false, false, false, false, false])
  answer[4].set(9, [false, false, false, false])
  answer[4].set(11, [false, false, false, false, false])
  answer[4].set(11, [false, false, false])
  answer[4].set(12, [false, false, false, false, false])

  answer[5] = new Map<number, boolean[]>()
  answer[5].set(5, [false, false, false, false])
  answer[5].set(2, [false, false])
  answer[5].set(3, [false, false, false, false])
  answer[5].set(4, [false, false, false])
  answer[5].set(5, [false, false, false, false])
  answer[5].set(6, [false, false, false, false, false, false])
  answer[5].set(7, [false, false, false, false])
  answer[5].set(8, [false, false, false, false, false, false])
  answer[5].set(9, [false, false, false, false])
  answer[5].set(11, [false, false, false, false, false])
  answer[5].set(11, [false, false, false])
  answer[5].set(12, [false, false, false, false, false])

  return {question, answer}
}

export default DataSeed;